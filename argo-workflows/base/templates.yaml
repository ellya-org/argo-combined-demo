---

apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: container-image
spec:
  serviceAccountName: workflow
  templates:
  - name: build-kaniko-git
    inputs:
      parameters:
      - name: repo_url
      - name: repo_ref
        value: refs/heads/master
      - name: repo_commit_id
        value: HEAD
      - name: container_image
      - name: container_tag
    container:
      image: gcr.io/kaniko-project/executor:debug
      command: [/kaniko/executor]
      args:
      - --context={{inputs.parameters.repo_url}}#{{inputs.parameters.repo_ref}}#{{inputs.parameters.repo_commit_id}}
      - --destination={{inputs.parameters.container_image}}:{{inputs.parameters.container_tag}}
      volumeMounts:
        - name: regcred
          mountPath: /kaniko/.docker/

---

apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: promote-stg
spec:
  serviceAccountName: workflow
  templates:
  - name: promote-stg
    inputs:
      parameters:
      - name: environment
      - name: repo_owner
      - name: repo_name
      - name: image_owner
      - name: image_name
      - name: tag
    script:
      image: dctellya/kustomize:4.5.5
      command: [sh]
      source: |
        #!/bin/bash
        set -e
        echo "cloning repo: github.com/{{inputs.parameters.repo_owner}}/{{inputs.parameters.repo_name}}"
        git clone https://$(cat /.github/token)@github.com/{{inputs.parameters.repo_owner}}/{{inputs.parameters.repo_name}}
        ls -pal {{inputs.parameters.repo_name}}
        cd {{inputs.parameters.repo_name}}
        sleep 2
        echo BEFORE:
        export PROMOTE_FILE={{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml
        export IMAGE={{inputs.parameters.image_owner}}/{{inputs.parameters.image_name}}
        export IMAGE_TAG={{inputs.parameters.tag}}
        cat $PROMOTE_FILE
        echo AFTER: 
        echo "-----------------------------------------------------------------------"
        sed -i -e "s@- $IMAGE:.*@- $IMAGE:$IMAGE_TAG@g" $PROMOTE_FILE
        if [ -f "$PROMOTE_FILE-e" ]; then
            rm $PROMOTE_FILE-e
        fi
        echo "-----------------------------------------------------------------------"
        cat $PROMOTE_FILE
        echo "-----------------------------------------------------------------------"
        git config user.name "$(cat /.github/user)"
        git config user.email "$(cat /.github/email)"
        git add {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml
        git commit -m "Upgraded {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml with the tag {{inputs.parameters.tag}}"
        git push
        # Checks
        JSON=$(jq -c -n --arg username "$(cat /.argocd/user)" --arg password "$(cat /.argocd/password)" '$ARGS.named')
        echo $JSON
        TOKEN=$(curl -Lk http://argocd-server.argocd/api/v1/session -d "$JSON" | jq -r ".token")
        echo $TOKEN
        i=0
        while [ $i -lt 6 ]
        do 
            STATUS=$(curl -Lk http://argocd-server.argocd/api/v1/applications/staging -H "Authorization: Bearer $TOKEN" | jq -r ".status.sync.status")
            HEALTH=$(curl -Lk http://argocd-server.argocd/api/v1/applications/staging -H "Authorization: Bearer $TOKEN" | jq -r ".status.health.status")
            REV=$(curl -Lk http://argocd-server.argocd/api/v1/applications/staging -H "Authorization: Bearer $TOKEN" | jq -r ".status.sync.revision")
            echo "status: $STATUS, health: $HEALTH, rev: $REV, tag: $IMAGE_TAG"
            if [[ "$STATUS" = "Synced" ]] && [[ "$HEALTH" = "Healthy" ]] && [[ "$IMAGE_TAG" = "$REV" ]]; then
                exit 0
            fi
            sleep 10
            i=$((i+1))
        done
        exit 1
      volumeMounts:
      - name: github-access
        mountPath: /.github/
      - name: argocd-access
        mountPath: /.argocd/

---

apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: promote-prod
spec:
  serviceAccountName: workflow
  templates:
  - name: promote-prod
    inputs:
      parameters:
      - name: environment
      - name: repo_owner
      - name: repo_name
      - name: image_owner
      - name: image_name
      - name: tag
    script:
      image: dctellya/kustomize:4.5.5
      command: [sh]
      source: |
        set -e
        echo "cloning repo: github.com/{{inputs.parameters.repo_owner}}/{{inputs.parameters.repo_name}}"
        git clone https://$(cat /.github/token)@github.com/{{inputs.parameters.repo_owner}}/{{inputs.parameters.repo_name}}
        ls -pal {{inputs.parameters.repo_name}}
        cd {{inputs.parameters.repo_name}}
        sleep 2
        echo BEFORE:
        export PROMOTE_FILE={{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml
        export IMAGE={{inputs.parameters.image_owner}}/{{inputs.parameters.image_name}}
        export IMAGE_TAG={{inputs.parameters.tag}}
        cat $PROMOTE_FILE
        echo AFTER: 
        echo "-----------------------------------------------------------------------"
        sed -i -e "s@- $IMAGE:.*@- $IMAGE:$IMAGE_TAG@g" $PROMOTE_FILE
        if [ -f "$PROMOTE_FILE-e" ]; then
          rm $PROMOTE_FILE-e
        fi
        echo "-----------------------------------------------------------------------"
        cat $PROMOTE_FILE
        echo "-----------------------------------------------------------------------"
        git config user.name "$(cat /.github/user)"
        git config user.email "$(cat /.github/email)"
        git add {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml
        git commit -m "Upgraded {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml with the tag {{inputs.parameters.tag}}"
        git push
      volumeMounts:
      - name: github-access
        mountPath: /.github/
      - name: argocd-access
        mountPath: /.argocd/